// Code generated by protoc-gen-go.
// source: xp.proto
// DO NOT EDIT!

/*
Package xp is a generated protocol buffer package.

It is generated from these files:
	xp.proto

It has these top-level messages:
	Header
	Return
	Request
	Response
*/
package xp

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EnumRetCode int32

const (
	EnumRetCode_OK            EnumRetCode = 0
	EnumRetCode_SERVER_ERROR  EnumRetCode = -1
	EnumRetCode_REQUEST_ERROR EnumRetCode = -2
	EnumRetCode_AUTH_FAILED   EnumRetCode = -3
)

var EnumRetCode_name = map[int32]string{
	0:  "OK",
	-1: "SERVER_ERROR",
	-2: "REQUEST_ERROR",
	-3: "AUTH_FAILED",
}
var EnumRetCode_value = map[string]int32{
	"OK":            0,
	"SERVER_ERROR":  -1,
	"REQUEST_ERROR": -2,
	"AUTH_FAILED":   -3,
}

func (x EnumRetCode) String() string {
	return proto.EnumName(EnumRetCode_name, int32(x))
}
func (EnumRetCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Header struct {
	Sequence    uint64 `protobuf:"varint,1,opt,name=sequence" json:"sequence,omitempty"`
	Cmd         uint32 `protobuf:"varint,2,opt,name=cmd" json:"cmd,omitempty"`
	SubCmd      uint32 `protobuf:"varint,3,opt,name=sub_cmd,json=subCmd" json:"sub_cmd,omitempty"`
	ClientId    string `protobuf:"bytes,4,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	AccessToken string `protobuf:"bytes,5,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
	Resource    string `protobuf:"bytes,6,opt,name=resource" json:"resource,omitempty"`
}

func (m *Header) Reset()                    { *m = Header{} }
func (m *Header) String() string            { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()               {}
func (*Header) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Header) GetSequence() uint64 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *Header) GetCmd() uint32 {
	if m != nil {
		return m.Cmd
	}
	return 0
}

func (m *Header) GetSubCmd() uint32 {
	if m != nil {
		return m.SubCmd
	}
	return 0
}

func (m *Header) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *Header) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *Header) GetResource() string {
	if m != nil {
		return m.Resource
	}
	return ""
}

type Return struct {
	Code    int32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	SubCode int32  `protobuf:"varint,2,opt,name=sub_code,json=subCode" json:"sub_code,omitempty"`
	Msg     string `protobuf:"bytes,3,opt,name=msg" json:"msg,omitempty"`
}

func (m *Return) Reset()                    { *m = Return{} }
func (m *Return) String() string            { return proto.CompactTextString(m) }
func (*Return) ProtoMessage()               {}
func (*Return) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Return) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Return) GetSubCode() int32 {
	if m != nil {
		return m.SubCode
	}
	return 0
}

func (m *Return) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type Request struct {
	Head *Header `protobuf:"bytes,1,opt,name=head" json:"head,omitempty"`
	Body []byte  `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Request) GetHead() *Header {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *Request) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type Response struct {
	Head *Header `protobuf:"bytes,1,opt,name=head" json:"head,omitempty"`
	Ret  *Return `protobuf:"bytes,2,opt,name=ret" json:"ret,omitempty"`
	Body []byte  `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Response) GetHead() *Header {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *Response) GetRet() *Return {
	if m != nil {
		return m.Ret
	}
	return nil
}

func (m *Response) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func init() {
	proto.RegisterType((*Header)(nil), "Header")
	proto.RegisterType((*Return)(nil), "Return")
	proto.RegisterType((*Request)(nil), "Request")
	proto.RegisterType((*Response)(nil), "Response")
	proto.RegisterEnum("EnumRetCode", EnumRetCode_name, EnumRetCode_value)
}

func init() { proto.RegisterFile("xp.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 345 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x91, 0x4d, 0x4f, 0xf2, 0x40,
	0x14, 0x85, 0xdf, 0xd2, 0x52, 0xca, 0x2d, 0x24, 0xcd, 0x6c, 0xde, 0x02, 0x1b, 0xec, 0x8a, 0xb8,
	0x60, 0xa1, 0x3b, 0x77, 0x04, 0x6b, 0x20, 0x9a, 0x10, 0x2f, 0x1f, 0xdb, 0x86, 0x76, 0xae, 0x4a,
	0xb4, 0x1d, 0xec, 0x4c, 0x13, 0xfd, 0x4d, 0xfe, 0x46, 0x3f, 0x32, 0x53, 0x81, 0x9d, 0x5d, 0x9d,
	0xfb, 0x9c, 0xdc, 0xd3, 0x33, 0x33, 0xe0, 0xbd, 0xed, 0xc7, 0xfb, 0x52, 0x28, 0x11, 0x7d, 0x58,
	0xe0, 0xce, 0x68, 0xcb, 0xa9, 0x64, 0x7d, 0xf0, 0x24, 0xbd, 0x56, 0x54, 0x64, 0x14, 0x5a, 0x43,
	0x6b, 0xe4, 0xe0, 0x71, 0x66, 0x01, 0xd8, 0x59, 0xce, 0xc3, 0xc6, 0xd0, 0x1a, 0x75, 0x51, 0x4b,
	0xf6, 0x1f, 0x5a, 0xb2, 0x4a, 0x13, 0x4d, 0x6d, 0x43, 0x5d, 0x59, 0xa5, 0xd3, 0x9c, 0xb3, 0x01,
	0xb4, 0xb3, 0x97, 0x1d, 0x15, 0x2a, 0xd9, 0xf1, 0xd0, 0x19, 0x5a, 0xa3, 0x36, 0x7a, 0x35, 0x98,
	0x73, 0x76, 0x06, 0x9d, 0x6d, 0x96, 0x91, 0x94, 0x89, 0x12, 0xcf, 0x54, 0x84, 0x4d, 0xe3, 0xfb,
	0x35, 0x5b, 0x69, 0xa4, 0x6b, 0x94, 0x24, 0x45, 0x55, 0x66, 0x14, 0xba, 0xf5, 0xfa, 0x61, 0x8e,
	0xe6, 0xe0, 0x22, 0xa9, 0xaa, 0x2c, 0x18, 0x03, 0x27, 0x13, 0xbc, 0x2e, 0xda, 0x44, 0xa3, 0x59,
	0x0f, 0x3c, 0x53, 0x49, 0xf3, 0x86, 0xe1, 0xba, 0xe2, 0x54, 0x5b, 0x01, 0xd8, 0xb9, 0x7c, 0x34,
	0x4d, 0xdb, 0xa8, 0x65, 0x74, 0x05, 0x2d, 0xd4, 0xa7, 0x93, 0x8a, 0x0d, 0xc0, 0x79, 0xa2, 0x2d,
	0x37, 0x59, 0xfe, 0x45, 0x6b, 0x5c, 0xdf, 0x07, 0x1a, 0xa8, 0x7f, 0x94, 0x0a, 0xfe, 0x6e, 0x02,
	0x3b, 0x68, 0x74, 0xb4, 0x01, 0x0f, 0x49, 0xee, 0x45, 0x21, 0xe9, 0xef, 0xe5, 0x1e, 0xd8, 0x25,
	0x29, 0xb3, 0xab, 0xbd, 0xba, 0x3b, 0x6a, 0x76, 0xcc, 0xb5, 0x4f, 0xb9, 0xe7, 0x0f, 0xe0, 0xc7,
	0x45, 0x95, 0x23, 0x29, 0x53, 0xda, 0x85, 0xc6, 0xe2, 0x36, 0xf8, 0xc7, 0x7a, 0xd0, 0x59, 0xc6,
	0xb8, 0x89, 0x31, 0x89, 0x11, 0x17, 0x18, 0x7c, 0x1f, 0x3e, 0x8b, 0xf5, 0xa1, 0x8b, 0xf1, 0xfd,
	0x3a, 0x5e, 0xae, 0x7e, 0xbd, 0xaf, 0x93, 0x17, 0x82, 0x3f, 0x59, 0xaf, 0x66, 0xc9, 0xcd, 0x64,
	0x7e, 0x17, 0x5f, 0x07, 0x9f, 0x47, 0x27, 0x75, 0xcd, 0xdb, 0x5f, 0xfe, 0x04, 0x00, 0x00, 0xff,
	0xff, 0x19, 0x17, 0x4c, 0xc8, 0x07, 0x02, 0x00, 0x00,
}
